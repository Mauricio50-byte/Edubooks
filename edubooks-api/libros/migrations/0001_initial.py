# Generated by Django 4.2.7 on 2025-09-09 17:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('autor', models.CharField(max_length=200)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('editorial', models.CharField(blank=True, max_length=100, null=True)),
                ('año_publicacion', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(2030)])),
                ('categoria', models.CharField(max_length=100)),
                ('ubicacion', models.CharField(max_length=100)),
                ('estado', models.CharField(choices=[('Disponible', 'Disponible'), ('Prestado', 'Prestado'), ('Reservado', 'Reservado'), ('Mantenimiento', 'Mantenimiento')], default='Disponible', max_length=15)),
                ('cantidad_total', models.PositiveIntegerField(default=1)),
                ('cantidad_disponible', models.PositiveIntegerField(default=1)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('imagen_portada', models.URLField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'libros',
                'ordering': ['titulo'],
            },
        ),
        migrations.CreateModel(
            name='Prestamo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_prestamo', models.DateTimeField(auto_now_add=True)),
                ('fecha_devolucion_esperada', models.DateField()),
                ('fecha_devolucion_real', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Devuelto', 'Devuelto'), ('Vencido', 'Vencido')], default='Activo', max_length=10)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('renovaciones', models.PositiveIntegerField(default=0)),
                ('libro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prestamos', to='libros.libro')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prestamos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'prestamos',
                'ordering': ['-fecha_prestamo'],
            },
        ),
        migrations.CreateModel(
            name='Sancion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('Multa', 'Multa'), ('Suspensión', 'Suspensión')], max_length=12)),
                ('monto', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dias_suspension', models.PositiveIntegerField(blank=True, null=True)),
                ('descripcion', models.TextField()),
                ('fecha_inicio', models.DateTimeField(auto_now_add=True)),
                ('fecha_fin', models.DateTimeField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('Activa', 'Activa'), ('Pagada', 'Pagada'), ('Completada', 'Completada')], default='Activa', max_length=12)),
                ('prestamo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sanciones', to='libros.prestamo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sanciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sanciones',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_reserva', models.DateTimeField(auto_now_add=True)),
                ('estado', models.CharField(choices=[('Activa', 'Activa'), ('Completada', 'Completada'), ('Cancelada', 'Cancelada')], default='Activa', max_length=12)),
                ('fecha_expiracion', models.DateTimeField()),
                ('libro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='libros.libro')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reservas',
                'ordering': ['-fecha_reserva'],
                'unique_together': {('libro', 'usuario', 'estado')},
            },
        ),
        migrations.CreateModel(
            name='Bibliografia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curso', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('activa', models.BooleanField(default=True)),
                ('docente', models.ForeignKey(limit_choices_to={'rol': 'Docente'}, on_delete=django.db.models.deletion.CASCADE, related_name='bibliografias', to=settings.AUTH_USER_MODEL)),
                ('libros', models.ManyToManyField(blank=True, related_name='bibliografias', to='libros.libro')),
            ],
            options={
                'db_table': 'bibliografias',
                'ordering': ['-fecha_creacion'],
                'unique_together': {('docente', 'curso')},
            },
        ),
    ]
